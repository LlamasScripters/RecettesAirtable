/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as ChatsLayoutImport } from './routes/chats/_layout'
import { Route as AuthLayoutImport } from './routes/auth/_layout'
import { Route as ChatsLayoutNewImport } from './routes/chats/_layout.new'
import { Route as ChatsLayoutChatIdImport } from './routes/chats/_layout.$chatId'
import { Route as AuthLayoutVerifyAccountImport } from './routes/auth/_layout.verify-account'
import { Route as AuthLayoutRegisterImport } from './routes/auth/_layout.register'
import { Route as AuthLayoutLoginImport } from './routes/auth/_layout.login'
import { Route as AuthLayoutForgotPasswordImport } from './routes/auth/_layout.forgot-password'
import { Route as AuthLayoutAccountValidatedImport } from './routes/auth/_layout.account-validated'
import { Route as AuthLayoutAccountCreatedImport } from './routes/auth/_layout.account-created'

// Create Virtual Routes

const ChatsImport = createFileRoute('/chats')()
const AuthImport = createFileRoute('/auth')()

// Create/Update Routes

const ChatsRoute = ChatsImport.update({
  id: '/chats',
  path: '/chats',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ChatsLayoutRoute = ChatsLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => ChatsRoute,
} as any)

const AuthLayoutRoute = AuthLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => AuthRoute,
} as any)

const ChatsLayoutNewRoute = ChatsLayoutNewImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => ChatsLayoutRoute,
} as any)

const ChatsLayoutChatIdRoute = ChatsLayoutChatIdImport.update({
  id: '/$chatId',
  path: '/$chatId',
  getParentRoute: () => ChatsLayoutRoute,
} as any)

const AuthLayoutVerifyAccountRoute = AuthLayoutVerifyAccountImport.update({
  id: '/verify-account',
  path: '/verify-account',
  getParentRoute: () => AuthLayoutRoute,
} as any)

const AuthLayoutRegisterRoute = AuthLayoutRegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthLayoutRoute,
} as any)

const AuthLayoutLoginRoute = AuthLayoutLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthLayoutRoute,
} as any)

const AuthLayoutForgotPasswordRoute = AuthLayoutForgotPasswordImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => AuthLayoutRoute,
} as any)

const AuthLayoutAccountValidatedRoute = AuthLayoutAccountValidatedImport.update(
  {
    id: '/account-validated',
    path: '/account-validated',
    getParentRoute: () => AuthLayoutRoute,
  } as any,
)

const AuthLayoutAccountCreatedRoute = AuthLayoutAccountCreatedImport.update({
  id: '/account-created',
  path: '/account-created',
  getParentRoute: () => AuthLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/auth/_layout': {
      id: '/auth/_layout'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthLayoutImport
      parentRoute: typeof AuthRoute
    }
    '/chats': {
      id: '/chats'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof ChatsImport
      parentRoute: typeof rootRoute
    }
    '/chats/_layout': {
      id: '/chats/_layout'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof ChatsLayoutImport
      parentRoute: typeof ChatsRoute
    }
    '/auth/_layout/account-created': {
      id: '/auth/_layout/account-created'
      path: '/account-created'
      fullPath: '/auth/account-created'
      preLoaderRoute: typeof AuthLayoutAccountCreatedImport
      parentRoute: typeof AuthLayoutImport
    }
    '/auth/_layout/account-validated': {
      id: '/auth/_layout/account-validated'
      path: '/account-validated'
      fullPath: '/auth/account-validated'
      preLoaderRoute: typeof AuthLayoutAccountValidatedImport
      parentRoute: typeof AuthLayoutImport
    }
    '/auth/_layout/forgot-password': {
      id: '/auth/_layout/forgot-password'
      path: '/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthLayoutForgotPasswordImport
      parentRoute: typeof AuthLayoutImport
    }
    '/auth/_layout/login': {
      id: '/auth/_layout/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLayoutLoginImport
      parentRoute: typeof AuthLayoutImport
    }
    '/auth/_layout/register': {
      id: '/auth/_layout/register'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthLayoutRegisterImport
      parentRoute: typeof AuthLayoutImport
    }
    '/auth/_layout/verify-account': {
      id: '/auth/_layout/verify-account'
      path: '/verify-account'
      fullPath: '/auth/verify-account'
      preLoaderRoute: typeof AuthLayoutVerifyAccountImport
      parentRoute: typeof AuthLayoutImport
    }
    '/chats/_layout/$chatId': {
      id: '/chats/_layout/$chatId'
      path: '/$chatId'
      fullPath: '/chats/$chatId'
      preLoaderRoute: typeof ChatsLayoutChatIdImport
      parentRoute: typeof ChatsLayoutImport
    }
    '/chats/_layout/new': {
      id: '/chats/_layout/new'
      path: '/new'
      fullPath: '/chats/new'
      preLoaderRoute: typeof ChatsLayoutNewImport
      parentRoute: typeof ChatsLayoutImport
    }
  }
}

// Create and export the route tree

interface AuthLayoutRouteChildren {
  AuthLayoutAccountCreatedRoute: typeof AuthLayoutAccountCreatedRoute
  AuthLayoutAccountValidatedRoute: typeof AuthLayoutAccountValidatedRoute
  AuthLayoutForgotPasswordRoute: typeof AuthLayoutForgotPasswordRoute
  AuthLayoutLoginRoute: typeof AuthLayoutLoginRoute
  AuthLayoutRegisterRoute: typeof AuthLayoutRegisterRoute
  AuthLayoutVerifyAccountRoute: typeof AuthLayoutVerifyAccountRoute
}

const AuthLayoutRouteChildren: AuthLayoutRouteChildren = {
  AuthLayoutAccountCreatedRoute: AuthLayoutAccountCreatedRoute,
  AuthLayoutAccountValidatedRoute: AuthLayoutAccountValidatedRoute,
  AuthLayoutForgotPasswordRoute: AuthLayoutForgotPasswordRoute,
  AuthLayoutLoginRoute: AuthLayoutLoginRoute,
  AuthLayoutRegisterRoute: AuthLayoutRegisterRoute,
  AuthLayoutVerifyAccountRoute: AuthLayoutVerifyAccountRoute,
}

const AuthLayoutRouteWithChildren = AuthLayoutRoute._addFileChildren(
  AuthLayoutRouteChildren,
)

interface AuthRouteChildren {
  AuthLayoutRoute: typeof AuthLayoutRouteWithChildren
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLayoutRoute: AuthLayoutRouteWithChildren,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface ChatsLayoutRouteChildren {
  ChatsLayoutChatIdRoute: typeof ChatsLayoutChatIdRoute
  ChatsLayoutNewRoute: typeof ChatsLayoutNewRoute
}

const ChatsLayoutRouteChildren: ChatsLayoutRouteChildren = {
  ChatsLayoutChatIdRoute: ChatsLayoutChatIdRoute,
  ChatsLayoutNewRoute: ChatsLayoutNewRoute,
}

const ChatsLayoutRouteWithChildren = ChatsLayoutRoute._addFileChildren(
  ChatsLayoutRouteChildren,
)

interface ChatsRouteChildren {
  ChatsLayoutRoute: typeof ChatsLayoutRouteWithChildren
}

const ChatsRouteChildren: ChatsRouteChildren = {
  ChatsLayoutRoute: ChatsLayoutRouteWithChildren,
}

const ChatsRouteWithChildren = ChatsRoute._addFileChildren(ChatsRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthLayoutRouteWithChildren
  '/chats': typeof ChatsLayoutRouteWithChildren
  '/auth/account-created': typeof AuthLayoutAccountCreatedRoute
  '/auth/account-validated': typeof AuthLayoutAccountValidatedRoute
  '/auth/forgot-password': typeof AuthLayoutForgotPasswordRoute
  '/auth/login': typeof AuthLayoutLoginRoute
  '/auth/register': typeof AuthLayoutRegisterRoute
  '/auth/verify-account': typeof AuthLayoutVerifyAccountRoute
  '/chats/$chatId': typeof ChatsLayoutChatIdRoute
  '/chats/new': typeof ChatsLayoutNewRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthLayoutRouteWithChildren
  '/chats': typeof ChatsLayoutRouteWithChildren
  '/auth/account-created': typeof AuthLayoutAccountCreatedRoute
  '/auth/account-validated': typeof AuthLayoutAccountValidatedRoute
  '/auth/forgot-password': typeof AuthLayoutForgotPasswordRoute
  '/auth/login': typeof AuthLayoutLoginRoute
  '/auth/register': typeof AuthLayoutRegisterRoute
  '/auth/verify-account': typeof AuthLayoutVerifyAccountRoute
  '/chats/$chatId': typeof ChatsLayoutChatIdRoute
  '/chats/new': typeof ChatsLayoutNewRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteWithChildren
  '/auth/_layout': typeof AuthLayoutRouteWithChildren
  '/chats': typeof ChatsRouteWithChildren
  '/chats/_layout': typeof ChatsLayoutRouteWithChildren
  '/auth/_layout/account-created': typeof AuthLayoutAccountCreatedRoute
  '/auth/_layout/account-validated': typeof AuthLayoutAccountValidatedRoute
  '/auth/_layout/forgot-password': typeof AuthLayoutForgotPasswordRoute
  '/auth/_layout/login': typeof AuthLayoutLoginRoute
  '/auth/_layout/register': typeof AuthLayoutRegisterRoute
  '/auth/_layout/verify-account': typeof AuthLayoutVerifyAccountRoute
  '/chats/_layout/$chatId': typeof ChatsLayoutChatIdRoute
  '/chats/_layout/new': typeof ChatsLayoutNewRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/chats'
    | '/auth/account-created'
    | '/auth/account-validated'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/register'
    | '/auth/verify-account'
    | '/chats/$chatId'
    | '/chats/new'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/chats'
    | '/auth/account-created'
    | '/auth/account-validated'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/register'
    | '/auth/verify-account'
    | '/chats/$chatId'
    | '/chats/new'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/auth/_layout'
    | '/chats'
    | '/chats/_layout'
    | '/auth/_layout/account-created'
    | '/auth/_layout/account-validated'
    | '/auth/_layout/forgot-password'
    | '/auth/_layout/login'
    | '/auth/_layout/register'
    | '/auth/_layout/verify-account'
    | '/chats/_layout/$chatId'
    | '/chats/_layout/new'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  ChatsRoute: typeof ChatsRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  ChatsRoute: ChatsRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth",
        "/chats"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth": {
      "filePath": "auth",
      "children": [
        "/auth/_layout"
      ]
    },
    "/auth/_layout": {
      "filePath": "auth/_layout.tsx",
      "parent": "/auth",
      "children": [
        "/auth/_layout/account-created",
        "/auth/_layout/account-validated",
        "/auth/_layout/forgot-password",
        "/auth/_layout/login",
        "/auth/_layout/register",
        "/auth/_layout/verify-account"
      ]
    },
    "/chats": {
      "filePath": "chats",
      "children": [
        "/chats/_layout"
      ]
    },
    "/chats/_layout": {
      "filePath": "chats/_layout.tsx",
      "parent": "/chats",
      "children": [
        "/chats/_layout/$chatId",
        "/chats/_layout/new"
      ]
    },
    "/auth/_layout/account-created": {
      "filePath": "auth/_layout.account-created.tsx",
      "parent": "/auth/_layout"
    },
    "/auth/_layout/account-validated": {
      "filePath": "auth/_layout.account-validated.tsx",
      "parent": "/auth/_layout"
    },
    "/auth/_layout/forgot-password": {
      "filePath": "auth/_layout.forgot-password.tsx",
      "parent": "/auth/_layout"
    },
    "/auth/_layout/login": {
      "filePath": "auth/_layout.login.tsx",
      "parent": "/auth/_layout"
    },
    "/auth/_layout/register": {
      "filePath": "auth/_layout.register.tsx",
      "parent": "/auth/_layout"
    },
    "/auth/_layout/verify-account": {
      "filePath": "auth/_layout.verify-account.tsx",
      "parent": "/auth/_layout"
    },
    "/chats/_layout/$chatId": {
      "filePath": "chats/_layout.$chatId.tsx",
      "parent": "/chats/_layout"
    },
    "/chats/_layout/new": {
      "filePath": "chats/_layout.new.tsx",
      "parent": "/chats/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
